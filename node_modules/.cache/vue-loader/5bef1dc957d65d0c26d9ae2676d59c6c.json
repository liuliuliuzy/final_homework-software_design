{"remainingRequest":"C:\\Users\\lzy\\Desktop\\vue_app\\fashion-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lzy\\Desktop\\vue_app\\fashion-master\\src\\pages\\register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lzy\\Desktop\\vue_app\\fashion-master\\src\\pages\\register.vue","mtime":1560082837043},{"path":"C:\\Users\\lzy\\Desktop\\vue_app\\fashion-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lzy\\Desktop\\vue_app\\fashion-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lzy\\Desktop\\vue_app\\fashion-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n \r\nimport axios from \"axios\"\r\nexport default {\r\n  name: \"Register\", \r\n  data() {\r\n    // <!--验证用户名是否合法-->\r\n    let checkName = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('用户名不能为空'))\r\n      // } else if (!this.checkMobile(value)) {\r\n      //   callback(new Error('手机号码不合法'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    //  <!--邮箱地址是否合法-->\r\n    // let checkEmail = (rule, value, callback) => {\r\n    //   if(value === '') {\r\n    //     callback(new Error('请输入邮箱地址'))\r\n    //   }\r\n    //   else if (!this.checkEmail(value)) {\r\n    //     callback(new Error('请输入合法的邮箱地址'))\r\n    //   } else {\r\n    //     callback()\r\n    //   }\r\n    // }\r\n    // <!--验证密码-->\r\n    let validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"))\r\n      } else {\r\n        if (this.ruleForm2.checkPass !== \"\") {\r\n          this.$refs.ruleForm2.validateField(\"checkPass\");\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    // <!--二次验证密码-->\r\n    let validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请再次输入密码\"));\r\n      } else if (value !== this.ruleForm2.pass) {\r\n        callback(new Error(\"两次输入密码不一致!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n    // 验证头像\r\n    let checkAvatar = (file, callback) => {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (!isJPG) {\r\n        callback(new Error('上传头像图片只能是 JPG 格式!'));\r\n      }\r\n      if (!isLt2M) {\r\n        callback(new Error('上传头像图片大小不能超过 2MB!'));\r\n      }\r\n    };\r\n    return {\r\n      ruleForm2: {\r\n        pass: \"\",\r\n        checkPass: \"\",\r\n        file: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n      },\r\n      rules2: {\r\n        pass: [{ validator: validatePass, trigger: 'change' }],\r\n        checkPass: [{ validator: validatePass2, trigger: 'change' }],\r\n        // email: [{ validator: checkEmail, trigger: 'change' }],\r\n        username: [{ validator: checkName, trigger: 'change' }],\r\n        //file: [{ validator: checkAvatar, trigger: 'blur'}],\r\n      },\r\n      imageUrl:\"\",\r\n    }\r\n  }, \r\n  methods: {\r\n      handleAvatarSuccess(res, file) {\r\n        //alert('handle avatar success');\r\n        this.imageUrl = URL.createObjectURL(file.raw);\r\n      },\r\n      beforeAvatarUpload(file) {\r\n        console.log(file)\r\n        this.ruleForm2.file = file\r\n        //this.ruleForm2.file = file.name;\r\n        //this.ruleForm2.file = new blob(file.raw, 'jpg');\r\n        this.imageUrl = URL.createObjectURL(file);\r\n        alert('头像上传成功');\r\n        return false;\r\n        //阻止图片上传，等到所有内容填写完成之后一起上传\r\n      },\r\n    // <!--发送验证码-->\r\n    // sendCode () {\r\n    //   let tel = this.ruleForm2.tel\r\n    //   if (this.checkMobile(tel)) {\r\n    //     console.log(tel)\r\n    //     let time = 60\r\n    //     this.buttonText = '已发送'\r\n    //     this.isDisabled = true\r\n    //     if (this.flag) {\r\n    //       this.flag = false;\r\n    //       let timer = setInterval(() => {\r\n    //         time--;\r\n    //         this.buttonText = time + ' 秒'\r\n    //         if (time === 0) {\r\n    //           clearInterval(timer);\r\n    //           this.buttonText = '重新获取'\r\n    //           this.isDisabled = false\r\n    //           this.flag = true;\r\n    //         }\r\n    //       }, 1000)\r\n    //     }\r\n    //   }\r\n    // },\r\n    // <!--提交注册-->\r\n    submitForm(formName) {\r\n      // alert('success!')\r\n      // console.log('submit')\r\n\r\n      // this.$refs[formName].validate(valid => {\r\n      //   if (valid) {\r\n      //   } else {\r\n      //     console.log(\"error submit!!\");\r\n      //     return false;\r\n      //   }\r\n      // })\r\n      let params = new FormData();\r\n      params.append(\"image\", this.ruleForm2.file)\r\n      // params.append(\"file\", 'yes')\r\n      params.append(\"user\", this.ruleForm2.username)\r\n      //params.append(\"email\", this.ruleForm2.email)\r\n      params.append(\"pass\", this.ruleForm2.pass)\r\n      axios.post(\"http://127.0.0.1:5000/api/user/register\", params).then(function(res){\r\n        alert(res.data.status)\r\n        // '\\n'+res.data.email\r\n      })\r\n    },\r\n    // <!--进入登录页-->\r\n    gotoLogin() {\r\n      this.$router.push({\r\n        path: \"/login\"\r\n      });\r\n    },\r\n    // 验证手机号\r\n    checkMobile(str) {\r\n      let re = /^1\\d{10}$/\r\n      if (re.test(str)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    checkEmail(str) {\r\n      //let re = /^1\\d{10}$/\r\n      let re = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/\r\n      if (re.test(str)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n  }\r\n};\r\n",{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"register.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div class=\"reg-div\"> \r\n    <div class=\"register-wrapper\"> \r\n      <div id=\"register\">\r\n        <p class=\"title\">注册界面</p>\r\n        <el-form\r\n          :model=\"ruleForm2\"\r\n          status-icon\r\n          :rules=\"rules2\"\r\n          ref=\"ruleForm2\"\r\n          label-width=\"0\"\r\n          class=\"demo-ruleForm\"\r\n        >\r\n        <!-- <p class=\"tips\">选择头像</p> -->\r\n        <el-form-item prop=\"file\">\r\n        <el-upload\r\n          class=\"avatar-uploader\"\r\n          action=\"\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\"\r\n          :before-upload=\"beforeAvatarUpload\">\r\n          <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\r\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        </el-upload>\r\n        </el-form-item>\r\n\r\n          <el-form-item prop=\"username\">\r\n            <el-input v-model=\"ruleForm2.username\" auto-complete=\"off\" placeholder=\"请输入用户名\"></el-input>\r\n          </el-form-item>\r\n          <!-- <el-form-item prop=\"email\" class=\"code\">\r\n            <el-input v-model=\"ruleForm2.email\" placeholder=\"请输入邮箱\"></el-input>\r\n          </el-form-item> -->\r\n          <el-form-item prop=\"pass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm2.pass\" auto-complete=\"off\" placeholder=\"输入密码\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"checkPass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm2.checkPass\" auto-complete=\"off\" placeholder=\"确认密码\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm2')\" style=\"width:100%;\">注册</el-button>\r\n            <p class=\"login\" @click=\"gotoLogin\">已有账号？立即登录</p>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script> \r\nimport axios from \"axios\"\r\nexport default {\r\n  name: \"Register\", \r\n  data() {\r\n    // <!--验证用户名是否合法-->\r\n    let checkName = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('用户名不能为空'))\r\n      // } else if (!this.checkMobile(value)) {\r\n      //   callback(new Error('手机号码不合法'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    //  <!--邮箱地址是否合法-->\r\n    // let checkEmail = (rule, value, callback) => {\r\n    //   if(value === '') {\r\n    //     callback(new Error('请输入邮箱地址'))\r\n    //   }\r\n    //   else if (!this.checkEmail(value)) {\r\n    //     callback(new Error('请输入合法的邮箱地址'))\r\n    //   } else {\r\n    //     callback()\r\n    //   }\r\n    // }\r\n    // <!--验证密码-->\r\n    let validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"))\r\n      } else {\r\n        if (this.ruleForm2.checkPass !== \"\") {\r\n          this.$refs.ruleForm2.validateField(\"checkPass\");\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    // <!--二次验证密码-->\r\n    let validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请再次输入密码\"));\r\n      } else if (value !== this.ruleForm2.pass) {\r\n        callback(new Error(\"两次输入密码不一致!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n    // 验证头像\r\n    let checkAvatar = (file, callback) => {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (!isJPG) {\r\n        callback(new Error('上传头像图片只能是 JPG 格式!'));\r\n      }\r\n      if (!isLt2M) {\r\n        callback(new Error('上传头像图片大小不能超过 2MB!'));\r\n      }\r\n    };\r\n    return {\r\n      ruleForm2: {\r\n        pass: \"\",\r\n        checkPass: \"\",\r\n        file: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n      },\r\n      rules2: {\r\n        pass: [{ validator: validatePass, trigger: 'change' }],\r\n        checkPass: [{ validator: validatePass2, trigger: 'change' }],\r\n        // email: [{ validator: checkEmail, trigger: 'change' }],\r\n        username: [{ validator: checkName, trigger: 'change' }],\r\n        //file: [{ validator: checkAvatar, trigger: 'blur'}],\r\n      },\r\n      imageUrl:\"\",\r\n    }\r\n  }, \r\n  methods: {\r\n      handleAvatarSuccess(res, file) {\r\n        //alert('handle avatar success');\r\n        this.imageUrl = URL.createObjectURL(file.raw);\r\n      },\r\n      beforeAvatarUpload(file) {\r\n        console.log(file)\r\n        this.ruleForm2.file = file\r\n        //this.ruleForm2.file = file.name;\r\n        //this.ruleForm2.file = new blob(file.raw, 'jpg');\r\n        this.imageUrl = URL.createObjectURL(file);\r\n        alert('头像上传成功');\r\n        return false;\r\n        //阻止图片上传，等到所有内容填写完成之后一起上传\r\n      },\r\n    // <!--发送验证码-->\r\n    // sendCode () {\r\n    //   let tel = this.ruleForm2.tel\r\n    //   if (this.checkMobile(tel)) {\r\n    //     console.log(tel)\r\n    //     let time = 60\r\n    //     this.buttonText = '已发送'\r\n    //     this.isDisabled = true\r\n    //     if (this.flag) {\r\n    //       this.flag = false;\r\n    //       let timer = setInterval(() => {\r\n    //         time--;\r\n    //         this.buttonText = time + ' 秒'\r\n    //         if (time === 0) {\r\n    //           clearInterval(timer);\r\n    //           this.buttonText = '重新获取'\r\n    //           this.isDisabled = false\r\n    //           this.flag = true;\r\n    //         }\r\n    //       }, 1000)\r\n    //     }\r\n    //   }\r\n    // },\r\n    // <!--提交注册-->\r\n    submitForm(formName) {\r\n      // alert('success!')\r\n      // console.log('submit')\r\n\r\n      // this.$refs[formName].validate(valid => {\r\n      //   if (valid) {\r\n      //   } else {\r\n      //     console.log(\"error submit!!\");\r\n      //     return false;\r\n      //   }\r\n      // })\r\n      let params = new FormData();\r\n      params.append(\"image\", this.ruleForm2.file)\r\n      // params.append(\"file\", 'yes')\r\n      params.append(\"user\", this.ruleForm2.username)\r\n      //params.append(\"email\", this.ruleForm2.email)\r\n      params.append(\"pass\", this.ruleForm2.pass)\r\n      axios.post(\"http://127.0.0.1:5000/api/user/register\", params).then(function(res){\r\n        alert(res.data.status)\r\n        // '\\n'+res.data.email\r\n      })\r\n    },\r\n    // <!--进入登录页-->\r\n    gotoLogin() {\r\n      this.$router.push({\r\n        path: \"/login\"\r\n      });\r\n    },\r\n    // 验证手机号\r\n    checkMobile(str) {\r\n      let re = /^1\\d{10}$/\r\n      if (re.test(str)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    checkEmail(str) {\r\n      //let re = /^1\\d{10}$/\r\n      let re = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/\r\n      if (re.test(str)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.reg-div{\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgb(5, 20, 34);\r\n}\r\n/* .avatar-uploader  */\r\n.el-upload {\r\n  border: 2px dashed #da2c2c;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  border: 2px dashed #8c939d;\r\n  border-radius: 6px;\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n}\r\n.avatar-uploader-icon:hover{\r\n  border-color: #409EFF\r\n}\r\n.avatar {\r\n  width: 120px;\r\n  height: 120px;\r\n  display: block;\r\n}\r\n.loading-wrapper {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  background: #aedff8;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.register-wrapper img {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n.register-wrapper {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n}\r\n#register {\r\n  max-width: 340px;\r\n  margin: 10px auto;\r\n  background: #fff;\r\n  padding: 20px 40px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  z-index: 9;\r\n  -webkit-border-radius: 5px;\r\n  border-radius: 5px;\r\n  border: 1px solid #eaeaea;\r\n  box-shadow: 0 0 25px #cac6c6;\r\n}\r\n.title {\r\n  font-size: 26px;\r\n  line-height: 50px;\r\n  font-weight: bold;\r\n  margin: 10px;\r\n  text-align: center;\r\n}\r\n.tips{\r\n  font-size: 15px;\r\n  line-height: 20px;\r\n  font-weight: bold;\r\n  margin: 10px;\r\n  text-align: left;\r\n  float: left;\r\n}\r\n.el-form-item {\r\n  text-align: center;\r\n}\r\n.login {\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  color: #1ab2ff;\r\n  cursor: pointer;\r\n  text-align: left;\r\n  text-indent: 8px;\r\n  width: 160px;\r\n}\r\n.login:hover {\r\n  color: #2c2fd6;\r\n}\r\n.code >>> .el-form-item__content {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.code button {\r\n  margin-left: 20px;\r\n  width: 140px;\r\n  text-align: center;\r\n}\r\n.el-button--primary:focus {\r\n  background: #409EFF;\r\n  border-color: #409EFF;\r\n  color: #fff;\r\n}\r\n</style>\r\n"]}]}